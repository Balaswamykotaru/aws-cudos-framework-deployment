name: Manual Trigger Workflow
# configure manual trigger
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          #AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
     # - name: Configure AWS credentials
       #uses: aws-actions/configure-aws-credentials@v1
        #with:
          #role-to-assume: arn:aws:iam::450683952831:role/AWSControlTowerExecution
          #aws-region: eu-central-1
      #- uses: mcblair/configure-aws-profile-action@v0.1.1
      #  with:
       #   role-arn: arn:aws:iam::450683952831:role/AWSControlTowerExecution
       #   profile-name: test

      - id: check-terraform-backend
        name: Check Terraform remote backend
        uses: tuler/s3-check-action@master
        env:
          FILE: global/terraform.tfstate
          
          AWS_S3_BUCKET: terraform-state-cudos-2
        

      - name: Create Terraform remote backend
        run: |
          cd backend
          terraform init 
          terraform apply -auto-approve
        if: steps.check-terraform-backend.outputs.exists == 'false'
        shell: bash

      - name: Terraform remote backend ready
        run: echo "Terraform remote backend ready, no action needed"
        if: steps.check-terraform-backend.outputs.exists == 'true'
        shell: bash

      - name: Terraform validate
        working-directory: ./CID-Dasboards
        #working-directory: ./terraform-modules/cur-setup-destination
        run: | 
          terraform init
          terraform validate 
        shell: bash
    
      - name: Terraform plan
        working-directory: ./CID-Dasboards
        #working-directory: ./terraform-modules/cur-setup-destination
        run: terraform plan -var-file="test.tfvars"
       
      #- name: Terraform apply
      #  working-directory: .
       # run: terraform apply -auto-approve -var-file="test.tfvars"
           
      #- name: Terraform destroy
        #working-directory: .
        #run: terraform destroy -auto-approve -var-file="test.tfvars"
           
